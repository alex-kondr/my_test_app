import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.browser.use_new_parser = True    session.queue(Request('http://www.pcmasters.de/testbericht.html'), process_frontpage, {})def process_frontpage(data, context, session):    for p in data.xpath("//div[@class='articles']/article[not(span[@class='cat-label'][regexp:test(., 'Software')])]//node()[regexp:test(name(),'h\d')]/a"):        context['name'] = p.xpath(".//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath("@href").string()        if context['name'] and context['url']:            session.queue(Request(context['url']), process_product, context)    next = data.xpath("//li[@class[regexp:test(., 'next_page')]]/a/@href").string()    if next:        session.queue(Request(next), process_frontpage, {})def process_product(data, context, session):    product = Product()    product.name = context['name'].replace(' im Test', '')    product.url = context['url']    category = data.xpath("//span[@class='cat-label'][last()]//text()[string-length(normalize-space(.))>0]").string()    product.category = Category(name = category)    product.ssid = re_search_once('\/(\d+)', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'pro'    review.date = data.xpath("//span[@class='article-date']/text()[string-length(normalize-space(.))>0]").string()    excerpt = data.xpath("//header[@class='article-header']//p[@itemprop='description']//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if not excerpt:        excerpt = data.xpath("//div[@itemprop='articleBody']//p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    user = data.xpath("//span[@class='author-name']/text()[string-length(normalize-space(.))>0]").string()    if user:        review.authors.append(Person(name = user, ssid = user))    summary = data.xpath("//node()[regexp:test(name(),'h\d')][regexp:test(., 'Fazit')]/following-sibling::p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='summary'), value=summary, name = "Fazit"))	    product.reviews.append(review)    session.emit(product)