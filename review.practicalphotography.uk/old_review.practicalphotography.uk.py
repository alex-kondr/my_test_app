# -*- coding: utf-8 -*-from agent import *from models.products import *debug = Truedef run(context, session):   session.sessionbreakers=[SessionBreak(max_requests=10000)]   session.queue(Request('http://www.practicalphotography.com/reviews'), process_productlist, {})def process_category(data, context, session):   cats=[]   for cat in data.xpath('//li[@class="page-collection"]//a[contains(@href,"/reviews")]'):      url = cat.xpath('@href').string()      category = cat.xpath('descendant::text()').string(multiple=True)      if url and category and url not in cats:         cats.append(url)         session.queue(Request(url), process_productlist, dict(category=category))def process_productlist(data, context, session):   for prod in data.xpath('//a[contains(@class," title")][contains(@href,"review")]'):      url = prod.xpath('@href').string()      name = prod.xpath('following-sibling::node()[1]//text()').string(multiple=True)      if url and name:         session.queue(Request(url), process_review, dict(context, url=url, name=name))   nexturl = data.xpath('//li[@data-test="page->"]//a//@href').string()   if nexturl:      session.queue(Request(nexturl), process_productlist, dict(context))def process_review(data, context, session):    product=Product()    product.name=context['name'].replace('Reviewed:','')    product.url=context['url']    product.ssid=product.name + product.url    product.category = data.xpath('//ol[contains(@class,"breadcrumbs")]//li[position()>1]//text()').join('|') or 'unknown'    product.manufacturer=''    review=Review()    review.product=product.name    review.url=product.url    review.type='pro'    review.ssid=product.ssid    # Publish date    pub_date=data.xpath('//div[contains(@class," author-date")]//time//@datetime').string()    if pub_date:        review.date=pub_date    else:        review.date='unknown'    # Author    author=data.xpath('//span[contains(@class," author-name")]//text()').string(multiple=True)    if author:        review.authors.append(Person(name=author, ssid=author))    else:        review.authors.append(Person(name='unknown', ssid='unknown'))    # Summary    summary=data.xpath('//p[descendant::strong[contains(text(), "erdict")]]//text()[string-length(normalize-space(.))>100]').string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type='summary',value=summary))    # Excerpt    excerpt=data.xpath('//meta[@property="og:description"]//@content').string(multiple=True)    if excerpt:        if summary: excerpt = excerpt.split(summary)[0]        review.properties.append(ReviewProperty(type='excerpt',value=excerpt))    if summary or excerpt:        product.reviews.append(review)    if product.reviews:        session.emit(product)