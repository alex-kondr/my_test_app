import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('http://www.tomshardware.fr/articles/?articleType=test'), process_frontpage, {})def process_frontpage(data, context, session):    for p in data.xpath("//ul[@class='listing']/li/div/a"):        context['name'] = p.xpath(".//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath("@href").string()        if context['name'] and context['url']:            session.queue(Request(context['url']), process_product, context)    next = data.xpath("//ul[@class='pager']//li[@class='active']/following-sibling::li[regexp:test(., '\d')]/a/@href").string()    if next:        session.queue(Request(next), process_frontpage, {})def process_product(data, context, session):    product = Product()    product.name = context['name']    product.url = context['url']    category = data.xpath("//li[@class='breadcrumbItem'][2]/a/text()[string-length(normalize-space(.))>0]").string()    product.category = Category(name = category)    product.ssid = re_search_once('\-(\d+)\.htm', product.url)    if not product.ssid:        product.ssid = re_search_once('\-(\d+)\/$', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'pro'    review.date = data.xpath("//time[@itemprop='datePublished']/@datetime").string()    user = data.xpath("//div[@class[regexp:test(., 'infos')]]/a/text()[string-length(normalize-space(.))>0]").string()    if user:        review.authors.append(Person(name = user, ssid = user))    excerpt = data.xpath("//article/following-sibling::p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    for page in data.xpath("//ol[@class='listing']/li/a"):        title = page.xpath(".//text()[string-length(normalize-space(.))>0]").string()        url = page.xpath("@href").string()        if title and url:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='pages'), value = {'url': url, 'title': title}))    summary_url = data.xpath("//ol[@class='listing']/li/a[regexp:test(., 'Conclusion')]/@href").string()    if summary_url:        session.queue(Request(summary_url), process_summary_page, dict(product=product, review=review))    else:        product.reviews.append(review)        session.emit(product)def process_summary_page(data, context, session):    review = context['review']    product = context['product']    summary = data.xpath("//article/following-sibling::p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='summary'), value=summary, name = "Conclusion"))    product.reviews.append(review)    session.emit(product)