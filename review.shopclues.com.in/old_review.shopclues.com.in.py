from agent import *from models.products import *debug = Trueimport agentdef request(url, max_age=1):   r = agent.Request(url, max_age=max_age)   r.add_header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8')   return rRequest = requestdef process_category(data, context, session):    for view in data.xpath("//div[@class='scfooter_Category']//li/a"):         url = view.xpath("(.)/@href").string()          name = view.xpath("(.)//text()[string-length(normalize-space(.))>1]").join("")        if url:           session.queue(Request(url), process_category1, {'cat' : name, 'url' : url})def process_category1(data, context, session):    cat = context['cat']    for view in data.xpath("//div[@class='column col3']"):         url = view.xpath("(.)/a[2]/@href").string()          ssid = view.xpath("(.)/a[1]/@pid").string()         url1 = view.xpath("(.)/span[1]/a[2]/@href").string()          ssid1 = view.xpath("(.)/span[1]/a[1]/@pid").string()         name = view.xpath("(.)//span[@class='prod_name']//text()[string-length(normalize-space(.))>1]").join("")        if url or url1 and name:           if not url:              url = url1           if not ssid:              ssid = ssid1           session.queue(Request(url), process_product, {'url' : url, 'cat' : cat, 'name' : name, 'ssid' : ssid, 'page_id' :  0})def process_product(data, context, session):     for list in data.xpath("//div[@class='rnr_lists']//ul/li"):        avt_n = list.xpath("(.)//div[@class='r_by']//text()[string-length(normalize-space(.))>0]").join("")        val = list.xpath("(.)//div[@class='prd_ratings']//text()[string-length(normalize-space(.))>0]").string()        date = list.xpath("(.)//div[@class='r_date']//text()[string-length(normalize-space(.))>0]").join("")        if avt_n and context['name']:             product = Product()             product.name =context['name']            product.url = context['url']            product.ssid = context['ssid']            product.category = 'Games'             review = Review()             review.product = product.name              review.url = product.url              review.ssid = product.ssid            review.type = "pro"            review.date = date            if avt_n:              review.authors.append(Person(name = avt_n, profile_url = review.url, ssid = review.ssid))              for list_src in data.xpath("//div[@class='prd_img_gallery']//a[img]"):               src = list_src.xpath("@src").string()               if src:                  product.properties.append(ProductProperty(type="image" , value = {'src': src}))           excerpt = data.xpath("//div[@id='product_description']//text()[string-length(normalize-space(.))>100]").join("")           if excerpt:                review.properties.append(ReviewProperty(type="excerpt", value = excerpt))           else:              excerpt = data.xpath("//div[@id='full_desc_2']//text()[string-length(normalize-space(.))>100]").join("")              if excerpt:                   review.properties.append(ReviewProperty(type="excerpt", value = excerpt))           vals = data.xpath("//div[@class='rr']//span[@itemprop='ratingValue']//text()[string-length(normalize-space(.))>0]").string()           if vals:              review.grades.append(Grade(type = 'overall', value = vals, worst = 0,  best = 5))            if val:              review.grades.append(Grade(name  = avt_n, value = val, worst = 0,  best = 5))            page_id = int(context['page_id'])           page_id = page_id  + 1           url = 'https://www.shopclues.com/home/reviewDetail/' + context['ssid'] + '/' +  str(page_id)           session.do(Request(url), process_product, {'url' : context['url'], 'cat' : context['cat'], 'name' : context['name'], 'ssid' : context['ssid'], 'page_id' : page_id})           if excerpt:              product.reviews.append(review)                 session.emit(product)def run(context, session):   session.sessionbreakers = [SessionBreak(max_requests=20000)]   session.queue(Request('http://www.shopclues.com/'), process_category, {})