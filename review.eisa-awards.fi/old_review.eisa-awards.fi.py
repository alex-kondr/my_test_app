from agent import *from models.products import *def process_first_page(data, context, session):    for link in data.xpath('//li[a[descendant::text()="Awards"]]//li//a[contains(@href,"awards")]'):        url=link.xpath('@href').string()        category=link.xpath('text()').string()        if url and category:            category = category.replace(' Awards','')            if '#awards' in url:                url = url.replace('#awards','?lang=fi')            else:                if '?lang=fi' not in url:                    url = url+'?lang=fi'            session.queue(Request(url, max_age=0, force_charset='utf-8'), process_category, dict(category=category))def process_category(data, context, session):    for link in data.xpath('//li[@class="awards-box"]'):        url=link.xpath('a//@href').string()        name=link.xpath('descendant::p[@class="title"]//text()').string()        if url and name:            if '#award' in url:                url = url.replace('#award','?lang=fi')            else:                if '?lang=fi' not in url:                    url = url+'?lang=fi'            session.queue(Request(url, max_age=0, force_charset='utf-8'), process_product, dict(context,url=url,name=name))def process_product(data, context, session):    product=Product()    product.name=context['name']    product.url=context['url']    product.ssid=product.name + product.url    product.category=context['category']    product.manufacturer=''    review=Review()    review.product=product.name    review.url=product.url    review.ssid=product.ssid + 'review'    review.type='pro'    # Title    title = data.xpath('//span[@class="subtitle"]//text()').string()    if title:        review.title = title    # Publish date    pub_date=data.xpath('//span[@class="subtitle"]//text()').string()    if pub_date and '-' in pub_date:        pub_date = pub_date.split(' ')[-1]        if '-' in pub_date:            review.date=pub_date    else:        review.date='unknown'    # Author    review.authors.append(Person(name='EISA', ssid='EISA'))    # Summary    summary=data.xpath('//div[@class="content"]//p[string-length(normalize-space(.))>50]//text()').string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type='summary',value=summary))    product.reviews.append(review)    if product.reviews:        session.emit(product)def process_cookies(data, context, session):    passdef run(context, session):    session.do(Request('http://www.eisa.eu/?lang=fi', max_age=0), process_cookies, {})    session.do(Request('http://www.eisa.eu/', max_age=0, force_charset='utf-8'), process_first_page, {})