from agent import *from models.products import *import redebug = Truedef run(context, session):    session.queue(Request("http://www.wir-testen-spiele.de/"), process_revlist, {}) def process_revlist(data, context, session):    for rev in data.xpath("//article"):        name = rev.xpath("./following-sibling::h3[1]/a/text()").string()        url = rev.xpath("./following-sibling::h3[1]/a/@href").string()        if url and name:            session.queue(Request(url), process_review, dict(name=name, url=url))    next = data.xpath("//a[@class='nextpostslink']/@href").string()    if next:        session.queue(Request(next), process_revlist, context) def process_review(data, context, session):          product = Product()    product.name = context['name']    product.manufacturer = data.xpath("//div/strong[regexp:test(text(),'Publisher')]/following-sibling::node()/descendant-or-self::text()").string(multiple=True)    product.category = data.xpath("//div[@id='breadcrump']/div[3]/a/span/text()").string()    product.url = data.xpath("//div[@class='entry']/a[@class='button left']/@href").string()    product.ssid = product.name    content = data.xpath("//div[@id='content']").first()    if content:        review = Review()        review.type = 'pro'        review.title = product.name        review.url = context['url']        review.ssid = content.xpath("//article/@id").string()        excerpt = content.xpath("//div[@class='entry']/p//text()").string(multiple=True)        review.properties.append(ReviewProperty(type='excerpt', value=excerpt))        conclusion = content.xpath("//div[@class='entry']//h3[contains(., 'Fazit')]//following-sibling::p//text()").string(multiple=True)        if conclusion:            review.properties.append(ReviewProperty(type='conclusion', value=conclusion))        grade = data.xpath("//div[@id='rating']//span[@class='rating']/text()").string(multiple=True)        if grade:            review.grades.append(Grade(name='overall', type='overall', value=float(grade), best=10))        product.reviews.append(review)        session.emit(product)