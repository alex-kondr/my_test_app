from agent import *from models.products import *debug = Trueimport redef process_productlist(data, context, session):   cnt = 0   for prod in data.xpath("//div[@itemprop='itemListElement']"):      url = prod.xpath("descendant::a[@itemprop='item']/@href").string()      name = prod.xpath("descendant::a[@itemprop='item']/span/text()[normalize-space(.)]").string()      category = prod.xpath("descendant::a[@itemprop='item']/span/font/text()").join('|')      manufacturer = prod.xpath("descendant::span[@class='company']/strong[1]/b/text()").string()      revurl = prod.xpath("descendant::span[@class='gusta']/a/@href").string()      if url and name and revurl:         cnt += 1         session.queue(Request(revurl), process_product, dict(url=url, revurl=revurl, name=name, category=category, manufacturer=manufacturer))   next = data.xpath("//li[@class='next']//a/@href").string()   if next:      session.queue(Request(next), process_productlist, dict(context))def process_product(data, context, session):   product = Product()   product.name = context['name']   product.url = context['url']   product.ssid = data.xpath("//input[@name='juegovotado']/@value").string()   product.category = context['category']   product.manufacturer = data.xpath("//li[regexp:test(normalize-space(.),'^Compa*')]/div//strong/text()").string()   content = data.xpath("//div[@class='post_dest']").first()   if content:      review = Review()      review.type = 'pro'      review.title = product.name      review.url = context['revurl']      review.ssid = content.xpath("a/@name").string()      review.date = content.xpath("descendant::span[@itemprop='datePublished']/@content").string()      author = content.xpath("descendant::span[@itemprop='author']/text()").string(multiple=True)      if author:         author = author.split('(')[0]         review.authors.append(Person(name=author.strip(), ssid=author.strip()))      rate = content.xpath("descendant::div[@itemprop='ratingValue']//text()").string(multiple=True)      if rate:         rate = re_search_once("(\d+\.?\d*)", rate)         if rate:            product.reviews.append(review)            review.grades.append(Grade(type='overall', name='La valoraci√≥n de Ultimagame', value=float(rate), best=10.0))      for g in content.xpath("descendant::div[@class='puntuacion']"):         title = g.xpath("descendant::span[@class='conocido']/text()[normalize-space(.)]").string(multiple=True)         value = g.xpath("descendant::span[@class='notapunto']/text()").string(multiple=True)         description = g.xpath("following-sibling::div[@class='cuerpost']//text()").string(multiple=True)         if title and value:            review.grades.append(Grade(name=title, value=float(value), best=10.0, description=description))      summary = content.xpath("descendant::div[@class='conclusion']//div[@class='intronoticia']//text()").string(multiple=True)      if summary:         review.add_property(type='summary', value=summary)   if product.reviews:      session.emit(product)def run(context, session):   session.sessionbreakers = [SessionBreak(max_requests=6000)]   session.browser.agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:17.0) Gecko/17.0 Firefox/17.0"   session.queue(Request('http://www.ultimagame.com/juegos.htm'), process_productlist, dict(page=1))