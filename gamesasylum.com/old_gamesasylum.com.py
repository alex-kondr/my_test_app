import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('https://www.gamesasylum.com/category/review/'), process_frontpage, {})def process_frontpage(data, context, session):    cnt = 0    for p in data.xpath("//div[@class='posts_container']//h2/a"):        cnt += 1        context['name'] = p.xpath(".//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath("@href").string()        if context['name'] and context['url']:            session.queue(Request(context['url']), process_product, context)    if cnt > 0:        baseurl = context.get('baseurl', data.request_url)        page = context.get('page', 1)        page += 1        url = baseurl + 'page/' + str(page) + '/'        session.queue(Request(url), process_frontpage, dict(page=page, baseurl=baseurl))def process_product(data, context, session):    product = Product()    product.name = context['name'].replace(' â€“ Review', '')    product.url = context['url']    product.category = Category(name = "Games")    product.ssid = re_search_once('\/([^\/]+)\/$', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'pro'    review.date = data.xpath("//div[@class='post_meta']//span[@itemprop='datePublished']/text()[string-length(normalize-space(.))>0]").string()    excerpt = data.xpath("//div[@class[regexp:test(., 'entry-content')]]/p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    user_data = data.xpath("//div[@class='post_meta']//a[@rel='author']").first()    if user_data:        user = Person()        user.name = user_data.xpath(".//text()[string-length(normalize-space(.))>0]").string()        user.profile_url = user_data.xpath("@href").string()        user.ssid = re_search_once('author\/([^\/]+)', user.profile_url)        review.authors.append(user)    grade = data.xpath("//div[@class='score']/text()[regexp:test(., '\d')]").string()    if grade:        review.grades.append(Grade(name="Score", value = grade, worst = 0, best = 10, type = 'overall'))	    product.reviews.append(review)    session.emit(product)