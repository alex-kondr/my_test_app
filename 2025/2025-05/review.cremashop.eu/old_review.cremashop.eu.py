from agent import *from models.products import *def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=5000)]    session.queue(Request('https://www.cremashop.eu/en/categories/', use="curl"), process_frontpage, dict())def process_frontpage(data, context, session):    cats = data.xpath("//div[@class='mb-4']/div/a[1]")    for cat in cats:        url = cat.xpath("@href").string()        cat = cat.xpath("../parent::div/div/h2/text()").string()        session.queue(Request(url, use="curl"), process_category, dict(cat=cat, url=url))def process_category(data, context, session):    subcats = data.xpath("//div[@class='row mb-5']//a[@class='stretched-link']")    if subcats:        for subcat in subcats:            surl = subcat.xpath('@href').string()            subcat = subcat.xpath('text()').string()            session.queue(Request(surl, use='curl'), process_category, dict(cat=context['cat'] + '|' + subcat, url=surl))    else:        session.queue(Request(context['url'], use="curl"), process_subcategory, dict(context))def process_subcategory(data, context, session):    prods = data.xpath("//div[@class='row mb-5']/div/div/a")    for prod in prods:        url = prod.xpath("@href").string()        session.queue(Request(url, use="curl"), process_product, dict(cat=context['cat'], url=url))    next = data.xpath("//link[@rel='next']/@href").string()    if next:        session.queue(Request(next, use="curl"), process_subcategory, dict(context))def process_product(data, context, session):    product = Product()    name = data.xpath("//h2[@class='h5']//text()").string()    if not name:        name = data.xpath("//h1/text()").string()    product.name = name    product.ssid = context['url'].split('/')[-1]    product.category = context['cat']    product.url = context['url']    infos = data.xpath("//div[@class='row mb-5']//ul[@class='list-group mb-4']/li")    if infos:        for info in infos:            if 'Brand' in info.xpath('text()').string():                manufacturer = info.xpath("./a/text()").string()                product.manufacturer = manufacturer            if 'Product code' in info.xpath("text()").string():                sku = info.xpath("span/text()").string()                product.sku = sku            if 'EAN' in info.xpath("text()").string():                ean = info.xpath("span/text()").string()                product.add_property(type='id.ean', value=ean)    revs = data.xpath("//div[@id='product-reviews-en']//div[@data-product-target='review']")    for rev in revs:        review = Review()        review.type = 'user'        review.url = product.url        review.date = rev.xpath(".//time/@datetime").string()        review.title = rev.xpath(".//h5/text()").string()        review.ssid = rev.xpath('@data-review').string()        author = rev.xpath("span/text()").string()        if author:            review.authors.append(Person(name=author, ssid=author))        grade = rev.xpath("@data-rating").string()        if float(grade) > 0:            review.grades.append(Grade(type='overall', value=float(grade), best=5.0))        excerpt = rev.xpath("p//text()").string(multiple=True)        if excerpt:            review.properties.append(ReviewProperty(type='excerpt', value=excerpt))            product.reviews.append(review)    if product.reviews:        session.emit(product)