from agent import *from models.products import *def run(context, session):    session.queue(Request('https://www.startech.com.bd/brother', use="curl"), process_prodlist, dict())def process_prodlist(data, context, session):    prods = data.xpath('//h4[@class="p-item-name"]/a')    for prod in prods:        url = prod.xpath('@href').string()        name = prod.xpath('.//text()').string()        session.queue(Request(url, use="curl"), process_product, dict(name=name, url=url))    next_url = data.xpath('//link[@rel="next"]/@href').string()    if next_url:        session.queue(Request(next_url, use="curl"), process_prodlist, dict(context))def process_product(data, context, session):    product = Product()    product.name = context['name']    product.url = context['url']    product.ssid = data.xpath('//meta[@itemprop="sku"]/@content').string()    product.category = data.xpath('(//head/meta[@content="1"]/following::body)[1]//span[@itemprop="name"]/text()').string()    product.sku = product.ssid    product.manufacturer = data.xpath('//meta[@property="product:brand"]/@content').string()    revs = data.xpath('//div[@class="review-wrap"]')    for rev in revs:        review = Review()        review.type = 'user'        review.url = product.url        date = rev.xpath('p[@class="author"]//text()').string(multiple=True)        if date:            review.date = date.split('on ')[-1]        author = rev.xpath('p[@class="author"]/span//text()').string(multiple=True)        if author:            review.authors.append(Person(name=author, ssid=author))        grade_overall = rev.xpath('.//span[.="star"]')        if grade_overall:            review.grades.append(Grade(type='overall', value=float(len(grade_overall)), best=5.0))        excerpt = rev.xpath('p[@class="review"]//text()').string(multiple=True)        if excerpt:            review.add_property(type='excerpt', value=excerpt)            review.ssid = review.digest() if author else review.digest(excerpt)            product.reviews.append(review)    if product.reviews:        session.emit(product)