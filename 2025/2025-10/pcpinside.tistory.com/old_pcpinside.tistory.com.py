from agent import *from models.products import *def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=60000)]    session.queue(Request('http://pcpinside.tistory.com/'), process_revlist, dict())def process_revlist(data, context, session):    revs = data.xpath("//div[@class='post-item']/a")    for rev in revs:        title = rev.xpath("span[@class='title']/text()").string(multiple=True)        url = rev.xpath("@href").string()        session.queue(Request(url), process_review, dict(context, title=title, url=url))    if revs:        page = context.get("page", 1) + 1        next_url = "http://pcpinside.tistory.com/" + "?page=" + str(page)        session.queue(Request(next_url), process_revlist, dict(context, page=page))def process_review(data, context, session):    product = Product()    product.name = context['title']    product.url = context['url']    product.ssid = context['url'].split('/')[-1]    product.category = data.xpath("//div[@class='category']//text()").string()    review = Review()    review.type = 'pro'    review.title = context['title']    review.url = product.url    review.ssid = product.ssid    author = data.xpath('//meta[@property="og.article.author"]/@content').string()    if author and author != '알 수 없는 사용자':        review.authors.append(Person(name=author, ssid=author))    date = data.xpath('//meta[@property="article:published_time"]/@content').string()    if date:        review.date = date.split('T')[0]    excerpt = data.xpath('//div[@class="contents_style"]/p[not(.//a)][not(.//img)][not(b)][not(contains(@style, "TEXT-ALIGN: center"))]//text()').string(multiple=True)    if excerpt:        review.add_property(type='excerpt', value=excerpt)        product.reviews.append(review)        session.emit(product)