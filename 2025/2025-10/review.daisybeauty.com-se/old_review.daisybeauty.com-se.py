from agent import *from models.products import *def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=9000)]    session.queue(Request('https://www.daisybeauty.com/recensioner/'), process_revlist, dict())def process_revlist(data, context, session):    revs = data.xpath('//h2[@class="entry-title"]/a')    for rev in revs:        url = rev.xpath("@href").string()        title = rev.xpath(".//text()").string()        session.queue(Request(url), process_review, dict(context, title=title, url=url))    next_page = data.xpath('//li[@class="pagination-next"]/a/@href').string()    if next_page:        session.queue(Request(next_page), process_revlist, dict(page=next_page))def process_review(data, context, session):    product = Product()    product.name = data.xpath('//h1[@class="entry-title"]/span/span/text()').string()    product.ssid = context['url'].split('/')[-2]    product.category = 'Beauty Products'    product.url = context['url']    review = Review()    review.title = context['title']    review.ssid = product.ssid    review.type = 'pro'    review.url = context['url']    review.date = data.xpath('//p[@class="entry-meta"]/span/span/text()').string().replace('â€”', '')    grade = data.xpath('//a[@href[contains(. , "betyg")]]/text()').string()    summary = data.xpath('//div[@class="entry-content"]//p[1]/span/span[not(time)]/text()').string()    if not summary:        summary = data.xpath('//div[@class="entry-content"]//p[2]//text()').string(multiple=True)    conclusion = data.xpath('//div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling:: h2[last()]/span/span/text()').string()    excerpt = data.xpath('//div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling::div/p/span/span//text() | //div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling::p/span/span//text() | //div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling:: h2/span/span//text() | //div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling::div/p//strong//text() | //div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling::p/span/span/strong//text() | //div[@class="entry-content"]/span[@class="breadcrumb-link-wrap"][5]/following-sibling::h2/span/span/strong//text() | //div[@style="margin: 0cm 0cm 0pt;"]//text()').string(multiple=True)    if excerpt:        if conclusion:            excerpt = excerpt.replace(conclusion, "").strip()            review.add_property(type='conclusion', value=conclusion)        if summary:            excerpt = excerpt.replace(summary, "").strip()            review.add_property(type='summary', value=summary)        review.add_property(type='excerpt', value=excerpt)        if not grade and 'Betyg: ' in excerpt:            grade = excerpt.split('Betyg', 2)        product.reviews.append(review)    if grade:        review.grades.append(Grade(type='overall', value=float(grade), best=5.0))    if product.reviews:        session.emit(product)