import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('http://stereo.ru/before/tests.php.html'), process_frontpage, {})def process_frontpage(data, context, session):    for cat in data.xpath("//div[@class='announce']"):        context['category'] = cat.xpath("preceding-sibling::h1[1]//text()[string-length(normalize-space(.))>0]").string()        cat_url = cat.xpath("h2/a/@href").string()        if context['category'] and cat_url:            session.queue(Request(cat_url), process_category, context)def process_category(data, context, session):    context['date'] = None    date = data.xpath("//a[@class='sv_issue']/text()[string-length(normalize-space(.))>0]").string()    if date:        context['date'] = re_search_once('Video.(.+)', date)    for p in data.xpath("//div[@id='content']/h1[position()>1]"):        product = Product()        product.name = p.xpath("text()[string-length(normalize-space(.))>0]").string()        product.url = data.request_url        product.category = Category(name = context['category'])        product.ssid = product.name        review = Review()        review.title = product.name        review.url = product.url        review.ssid = product.ssid        review.type = 'pro'        review.date = context['date']        excerpt = p.xpath("following-sibling::p[1]//text()[string-length(normalize-space(.))>100][1]").string()        if excerpt:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))        p_value = p.xpath("following-sibling::div[@class='desc_block'][1]/ul/li/text()[regexp:test(., 'Достоинства')]").string()        if p_value:            p_value = re_search_once('Достоинства: ', p_value)            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='pros'), value=p_value, name = "Достоинства"))        c_value = p.xpath("following-sibling::div[@class='desc_block'][1]/ul/li/text()[regexp:test(., 'Недостатки')]").string()        if c_value:            c_value = re_search_once('Недостатки: ', c_value)            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='cons'), value=c_value, name = "Недостатки"))        product.reviews.append(review)        session.emit(product)    for next in data.xpath("//div[@id='pagination']/a/@href"):        session.queue(Request(next.string()), process_nextpage, context)def process_nextpage(data, context, session):    for p in data.xpath("//div[@id='content']/h1"):        product = Product()        product.name = p.xpath("text()[string-length(normalize-space(.))>0]").string()        product.url = data.request_url        product.category = Category(name = context['category'])        product.ssid = product.name        review = Review()        review.title = product.name        review.url = product.url        review.ssid = product.ssid        review.type = 'pro'        review.date = context['date']        excerpt = p.xpath("following-sibling::p[1]//text()[string-length(normalize-space(.))>100][1]").string()        if excerpt:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))        p_value = p.xpath("following-sibling::div[@class='desc_block'][1]/ul/li/text()[regexp:test(., 'Достоинства')]").string()        if p_value:            p_value = re_search_once('Достоинства: ', p_value)            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='pros'), value=p_value, name = "Достоинства"))        c_value = p.xpath("following-sibling::div[@class='desc_block'][1]/ul/li/text()[regexp:test(., 'Недостатки')]").string()        if c_value:            c_value = re_search_once('Недостатки: ', c_value)            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='cons'), value=c_value, name = "Недостатки"))        product.reviews.append(review)        session.emit(product)