# -*- coding: utf8 -*-from agent import *from models.products import *import time, randomdebug = Truedef run(context, session):    session.sessionbreakers=[SessionBreak(max_requests=10000)]    session.queue(Request('http://shiftdelete.net/inceleme', use="curl"), process_category, {})def process_category(data, context, session):    cnt = 0    for link in data.xpath('//div[@class="post-title"]//a'):        cnt += 1        url=link.xpath('@href').string()        name=link.xpath('descendant::text()').string()        if url and name:            bad_list2 = ['inceleme','','','','']            for item in bad_list2:                if item in name:                    name = name.replace(item, '')            session.queue(Request(url, use="curl"), process_product, dict(context, url=url, name=name))    if cnt == 0: print data.content    # Next page    next=data.xpath('//a[@class="next page-numbers"]//@href').string()    if next:        session.queue(Request(next, use="curl"), process_category, dict(context))    #time.sleep(random.randint(5,10))def process_product(data, context, session):    product=Product()    product.name=context['name']    product.url=context['url']    product.ssid=product.name + product.url    # Category    category = data.xpath('//article[contains(@class, "category")]//@class').string()    if category:        if 'category-' in category:            cats = category.split('category-')[1:-1]            product.category = '|'.join(cats)        if 'tag-' in category:            tags = category.split('tag-')[1:-1]            if product.category:                product.category = product.category + '|' + '|'.join(tags)            else:                product.category = '|'.join(tags)    else:        product.category = 'unknown'    product.manufacturer=''    review=Review()    review.product=product.name    review.url=product.url    review.ssid=product.ssid + 'review'    review.type='pro'    # Publish date    pub_date=data.xpath('//meta[@property="article:published_time"]//@content').string()    if pub_date:        if 'T' in pub_date: pub_date=pub_date.split('T')[0]        review.date=pub_date    else:        review.date='unknown'    # Author    author=data.xpath('//a[@rel="author"]//text()').string(multiple=True)    if author:        review.authors.append(Person(name=author, ssid=author))    else:        review.authors.append(Person(name='shiftdelete.net', ssid='shiftdelete.net'))    # Grades    overall=data.xpath('//span[@itemprop="ratingValue"]//text()').string()    if overall:        review.grades.append(Grade(name='Overall Rating', type='overall', value=overall, best=10))    # Excerpt    excerpt=data.xpath('//meta[@property="og:description"]//@content').string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type='excerpt',value=excerpt + '...'))    product.reviews.append(review)    if product.reviews:        session.emit(product)    #time.sleep(random.randint(15,20))