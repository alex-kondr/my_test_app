import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('https://www.samma3a.com/tech/en/product-reviews/', use='curl'), process_frontpage, {})def process_frontpage(data, context, session):    for p in data.xpath("//div[@class='td-ss-main-content']//div[@class='item-details']"):        context['name'] = p.xpath(".//h3/a//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath(".//h3/a/@href").string()        context['date'] = p.xpath(".//span[@class='td-post-date']//text()[string-length(normalize-space(.))>0]").string()        if context['name'] and context['url']:            session.queue(Request(context['url'], use='curl'), process_product, context)    next = data.xpath("//link[@rel='next']/@href").string()    if next:        session.queue(Request(next, use='curl'), process_frontpage, {})def process_product(data, context, session):    product = Product()    product.name = context['name'].replace('Review', '').strip()    product.url = context['url']    product.category = Category(name = "Gadgets")    product.ssid = re_search_once('\/([^\/]+)\/*$', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'user'    review.date = context['date']    user_data = data.xpath("//a[span[@class='writer_name']]").first()    if user_data:        user = Person()        user.name = user_data.xpath(".//text()[string-length(normalize-space(.))>0]").string()        user.profile_url = user_data.xpath("@href").string()        user.ssid = re_search_once('\/author\/([^\/]+)', user.profile_url)        review.authors.append(user)    for pros in data.xpath("//div[h4[@class='pros_title']]//ul/li"):        p_value = pros.xpath(".//text()[string-length(normalize-space(.))>0]").string()        if p_value:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='pros'), value=p_value.replace('●', '').strip(), name = "Pros"))    for cons in data.xpath("//div[h4[@class='cons_title']]//ul/li"):        c_value = cons.xpath(".//text()[string-length(normalize-space(.))>0]").string()        if c_value:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='cons'), value=c_value.replace('●', '').strip(), name = "Cons"))    for g in data.xpath("//div[@class='rat_content']//div[@class[regexp:test(., 'rate_item')]]"):        g_name = g.xpath("div[1]//text()[string-length(normalize-space(.))>0]").string()        g_value = g.xpath(".//p[@class='text-success']/text()[regexp:test(., '\d')]").string()        if g_name and g_value:            review.grades.append(Grade(name = g_name, value = g_value, worst = 0, best = 10))    grade = data.xpath("//div[@class[regexp:test(., 'bl_rate')]]//h4/text()[regexp:test(., '^\d')]").string()    if grade:        review.grades.append(Grade(name="Samma3a RATE", value = grade, worst = 0, best = 10, type = 'overall'))    conclusion = data.xpath("//div[@class='bl_disc']/p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if conclusion:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='conclusion'), value=conclusion, name = "Bottom Line"))    product.reviews.append(review)    session.emit(product)