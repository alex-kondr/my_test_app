import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('http://www.gamekapocs.hu/cikkek/tesztek'), process_frontpage, {})def process_frontpage(data, context, session):    for p in data.xpath("//div[@id='article_list']/div[@class='cikk_header']//h1/a"):        context['name'] = p.xpath(".//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath("@href").string()        if context['name'] and context['url']:            session.queue(Request(context['url'].replace('http:', 'https:')), process_product, context)    next = data.xpath("//li[@class='selected']/following-sibling::li[a[regexp:test(., '\d')]][1]/a/@href").string()    if next:        session.queue(Request(next), process_frontpage, {})def process_product(data, context, session):    product = Product()    product.name = context['name'].replace(' teszt', '').replace(' villámteszt', '')    product.url = context['url']    category = "Games"    product.category = Category(name = category)    product.ssid = re_search_once('\/(\d+)\/', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'pro'    review.date = data.xpath("//span[@property='v:dtreviewed']/@content").string()    user_data = data.xpath("//div[@class='kozep']//a").first()    if user_data:        user = Person()        user.name = user_data.xpath(".//text()[string-length(normalize-space(.))>0]").string()        user.profile_url = user_data.xpath("@href").string()        user.ssid = re_search_once('\/([^\/]+)$', user.profile_url)        review.authors.append(user)    excerpt = data.xpath("//div[@id='articletext']/p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    summary = data.xpath("//span[@property='v:summary']/@content").string()    if summary:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='summary'), value=summary, name = "Summary"))    for pros in data.xpath("//div[@id='pros']/ul/li"):        p_value = pros.xpath(".//text()[string-length(normalize-space(.))>0]").string()        if p_value:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='pros'), value=p_value, name = "Pozitívumok"))    for cons in data.xpath("//div[@id='cons']/ul/li"):        c_value = cons.xpath(".//text()[string-length(normalize-space(.))>0]").string()        if c_value:            review.properties.append(ReviewProperty(type=ReviewPropertyType(name='cons'), value=c_value, name = "Negatívumok"))    grade = data.xpath("//div[@id='scores']//div[@class='number']//text()[regexp:test(., '\d')]").string()    if grade:        review.grades.append(Grade(name="Értékelés", value = grade, worst = 0, best = 10, type = 'overall'))    product.reviews.append(review)    session.emit(product)