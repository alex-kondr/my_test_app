from agent import *from models.products import *import operatorimport redebug = Truedef process_category(data, context, session):    for view in data.xpath("//div[@class='nebotheme-blog__posts__inner']/div"):         url = view.xpath("(.)/div[2]/div[@class='nebotheme-post__title']//a/@href").string()          name = view.xpath("(.)/div[2]/div[@class='nebotheme-post__title']//text()[string-length(normalize-space(.))>1]").join("")        avt_u = view.xpath("(.)/div[2]/div[@class='nebotheme-post__meta']//div[@data-type='author']//a/@href").string()          avt_n = view.xpath("(.)/div[2]/div[@class='nebotheme-post__meta']//div[@data-type='author']//a//text()[string-length(normalize-space(.))>1]").join("")        date = view.xpath("(.)/div[2]/div[@class='nebotheme-post__meta']//div[@data-type='date']//span//text()[string-length(normalize-space(.))>1]").join("")        id = view.xpath("(.)/preceding-sibling::article[1]/@id").string()         if url:           ssid = url           session.do(Request(url), process_product, {'url' : url, 'name' : name, 'ssid' : id, 'date' : date, 'avt_u' : avt_u, 'avt_n' : avt_n})        next = data.xpath("//div[@class='nebotheme-pagination']//a[@class='next page-numbers']/@href").string()    if next:       session.do(Request(next), process_category, {})     def process_product(data, context, session):       product = Product()      product.name =context['name']     product.url = context['url']     product.ssid =context['ssid']     product.category = 'The Best Gear'      review = Review()      review.product = product.name       review.url = product.url       review.ssid = product.ssid     review.type = "pro"     review.date = context['date']    avt_n = context['avt_n']    avt_u = context['avt_u']    if avt_n and avt_u:       review.authors.append(Person(name = avt_n, profile_url = avt_u, ssid = review.ssid))       for list in data.xpath("//div[@class='entry-content clearfix']//img"):        src = list.xpath("@src").string()        if src:           product.properties.append(ProductProperty(type="image" , value = {'src': src}))    excerpt = data.xpath("//div[@class='entry-content clearfix']/p[text()[string-length(normalize-space(.))>100] or *//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>100]").join("")    if excerpt:         review.properties.append(ReviewProperty(type="excerpt", value = excerpt))    con = data.xpath("//div[@class='entry-content clearfix']/p[text()[string-length(normalize-space(.))>100] or *//text()[string-length(normalize-space(.))>100]][last()]//text()[string-length(normalize-space(.))>100]").join("")    if con:         review.properties.append(ReviewProperty(type="conclusion", value = con))    if excerpt:       product.reviews.append(review)          session.emit(product)def run(context, session):        session.queue(Request('https://www.thephoblographer.com/category/features/'), process_category, {})