from agent import *from models.products import *import reimport agentdef request(url):   r = agent.Request(url)   r.add_header('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36')   r.add_header('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3')   r.add_header('Accept-Encoding', 'gzip, deflate')   r.add_header('Accept-Language', 'en-US,en;q=0.9')   r.add_header('Cache-Control', 'max-age=0')   r.add_header('Connection', 'keep-alive')   r.add_header('Host', 'www.psillustrated.com')   r.add_header('Upgrade-Insecure-Requests', '1')   return rRequest = requestdef process_revlist(data, context, session):   for rev in data.xpath("//td[@class='listItem']//a"):      url = rev.xpath("@href").string()      name = rev.xpath("descendant::text()").string(multiple=True)      category = rev.xpath("preceding::td[2]//img/@alt").string()      if url and name and category:         session.queue(Request(url), process_review, dict(url=url, name=name, category=category))   nexturl = data.xpath("//a[regexp:test(normalize-space(.), '^>>Next$')]/@href").string()   if nexturl:      session.queue(Request(nexturl), process_revlist, dict())def process_review(data, context, session):   product = Product()   product.name = context['name']   product.url = context['url']   product.ssid = re_search_once("/soft_rev.php/(\d+)", product.url)   product.category = context['category']   content = data.xpath("//table[@class='revContent']/tr[2]/td/table").first()   if content:      product.manufacturer = content.xpath("descendant::text()[regexp:test(normalize-space(.), 'Publisher:')]/following::text()[normalize-space(.)][1]").string()      review = Review()      review.type = 'pro'      review.title = context['name']      review.url = context['url']      review.ssid = product.ssid      product.reviews.append(review)      review.date = 'N/A'      author = content.xpath("descendant::a[regexp:test(@href, 'reviewer.php')]").first()      if author:         name = author.xpath("following-sibling::text()").string(multiple=True)         url = author.xpath("@href").string()         if url and name:            fname = re_search_once("AKA (.+)$", name)            ssid = re_search_once("/reviewer.php/(\d+)", url)            review.authors.append(Person(name=fname, profile_url=url, ssid=ssid))      ratetxt = content.xpath("descendant::text()[regexp:test(normalize-space(.),'Score')]/following-sibling::b[1]/text()").string()      if ratetxt:         rate = re_search_once("(\d+)", ratetxt)         if rate and float(rate) > 100:            rate = '100'         if rate:            review.grades.append(Grade(type='overall', name='Score', value=float(rate), best=100.0))      excerpt = content.xpath("descendant::div[@class='content']//text()[not(ancestor::script)]").string(multiple=True)      if excerpt:         review.properties.append(ReviewProperty(type='excerpt', value=excerpt))   if product.ssid and product.reviews:      session.emit(product)def run(context, session):##   session.sessionbreakers = [SessionBreak(max_requests=5000)]   session.queue(Request('http://www.psillustrated.com/psillustrated/index_reviews.php/1'), process_revlist, {})