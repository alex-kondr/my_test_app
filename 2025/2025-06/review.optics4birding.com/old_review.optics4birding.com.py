import stringfrom agent import *from models.products import *import redebug = Truedef run(context, session):     session.queue(Request('http://www.optics4birding.com/reviews.aspx'), process_frontpage, {})def process_frontpage(data, context, session):    for p in data.xpath("//div[@class='review-probox1']"):        context['name'] = p.xpath(".//a//text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath(".//a/@href").string()        context['category'] = p.xpath("parent::div[@class='review-probox']/preceding-sibling::*[self::h2 or self::h1][1]/text()[string-length(normalize-space(.))>0]").string()        if context['name'] and context['url']:            session.queue(Request(context['url']), process_product, context)def process_product(data, context, session):    product = Product()    product.name = context['name']    product.url = context['url']    category = data.xpath("//div[@id='breadcrumbs']/a[position()>1]/text()[string-length(normalize-space(.))>0]").string()    if not category:        category = context['category']    if category:        category = category.replace('Reviews', '').strip()    product.category = Category(name = category)    product.ssid = re_search_once('\/([^\/]+)\.asp', product.url)    review = Review()    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.type = 'pro'    excerpt = data.xpath("//div[@class='content-txtbox']/p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if not excerpt:        excerpt = data.xpath("//td/p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    summary = data.xpath("//div[@class='content-txtbox']/h2[regexp:test(., 'Conclusion')]/following-sibling::p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if not summary:        summary = data.xpath("//td/h2[regexp:test(., 'Conclusion')]/following-sibling::p[.//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>0]").string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='summary'), value=summary, name = "Conclusion"))	    product.reviews.append(review)    session.emit(product)