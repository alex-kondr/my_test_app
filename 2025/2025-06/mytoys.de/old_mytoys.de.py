from agent import *from models.products import *import redebug = Truedef process_category(data, context, session):    for view_categoryline in data.xpath("//ul[@class='nav_local-links']/li/a"):        context['product_url'] = view_categoryline.xpath("@href").string()        context['category_name'] = view_categoryline.xpath("(.)//text()[string-length(normalize-space(.))>1]").join(". ")        if context['product_url'] and context['category_name']:            session.do(Request(context['product_url']), process_view_category, context)def process_view_category(data, context, session):    for view_categoryline in data.xpath("//div[@class='find_tile__content']"):        context['product_url'] = view_categoryline.xpath("a[@class='find_tile__productLink']/@href").string()        context['product_name'] = view_categoryline.xpath("p[@class='find_tile__name pl_copy100']//text()[string-length(normalize-space(.))>1]").join(". ")        if context['product_url'] and context['product_name']:            session.do(Request(context['product_url']), process_product, context)    #next = data.xpath("//ul[@class='pager']/li[@class='pager__item--next js-pager']/a/@href").string()    #if next:    #    session.queue(Request(next), process_view_category, context)def process_product(data, context, session):     product = Product()    product.url = context['product_url']     product.ssid = context['product_url']    product.name = context['product_name']    product.category = 'cloth'    review = Review()      review.product = product.name       review.url = product.url       review.ssid = product.ssid     review.type = "pro"     username = data.xpath(".//div[@class='prod-review__testimonials-author']/text()[string-length(normalize-space(.))>0]").string()    if username:       review.authors = Person(name = username, ssid = username)    url_image = data.xpath("//meta[@property='og:image']/@content").string()    if url_image:        product.properties.append(ProductProperty(type='image' , value = {'src': url_image, 'type': 'product'}))    excerpt = data.xpath("//div[contains(@class, 'js_pdp_description')][contains(@class, 'js_pdp_description__text-expander')]//text()[string-length(normalize-space(.))>100]").join("")    if excerpt:         review.properties.append(ReviewProperty(type="excerpt", value = excerpt))    else:        excerpt = data.xpath("//div[@data-ft5-visibility-tracking='description']/div/p[text()[string-length(normalize-space(.))>100] or *//text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>100]").join("")         if excerpt:            review.properties.append(ReviewProperty(type="excerpt", value = excerpt))       else:          excerpt = data.xpath("//div[@data-ft5-visibility-tracking='description']/div//text()[string-length(normalize-space(.))>100][1]").join("")            if excerpt:               review.properties.append(ReviewProperty(type="excerpt", value = excerpt))        conclusion = data.xpath("//div[@class='js_pdp_description pl_block pl_block--no-gap pdp_description']/div/p[text()[string-length(normalize-space(.))>100] or *//text()[string-length(normalize-space(.))>100]][last()]//text()[string-length(normalize-space(.))>100]").join("")    if conclusion:         review.properties.append(ReviewProperty(type="conclusion", value = conclusion))    grade1 = data.xpath("//div[@data-qa='pdpReviewTestimonialStars']/div[@class='rating-stars rating-stars--filled']/@style").string()    if grade1:       rating_value = re_search_once('(\d+)', grade1)       if rating_value and rating_value != '0':          rating_value2 = str(float(rating_value)/20)          review.grades.append(Grade(name= 'Rating', value = rating_value2, worst = 0,  best = 5, type = 'overall'))    if excerpt:       product.reviews.append(review)          session.emit(product)def run(context, session):    sb = SessionBreak()    sb.max_requests = 25000    session.sessionbreakers = [ sb ]    session.queue(Request('https://www.otto.de/babys/'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/spielzeug/'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.mytoys.de/mode-schuhe/'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/mode/bekleidung/'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/diy/bastelbedarf/bastelzubehoer/?altersgruppe=kinder'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/diy/malen/malvorlagen/malbuecher/?s=teenager'), process_view_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/moebel/kindermoebel/'), process_category, {'category_name': '33'})    session.queue(Request('https://www.otto.de/garten/gartenmoebel/gartenmoebel-sets/?altersgruppe=kinder'), process_view_category, {'category_name': '33'})