from agent import *from models.products import *def run(context, session):    session.queue(Request('https://www.fotografie.nl/boeken/', use='curl', force_charset='utf-8'), process_revlist, {})def process_revlist(data, context, session):    revlist = data.xpath("//div[@class='dynamic-item w-dyn-item']")    for rev in revlist:        title = rev.xpath("a[@class='post-title']/text()").string()        url = rev.xpath("a[@class='post-title']/@href").string()        date = rev.xpath(".//div[@class='date']/text()").string()        author_name = rev.xpath(".//a[@class='name-author-article']/text()").string()        author_url = rev.xpath(".//a[@class='name-author-article']/@href").string()        session.queue(Request(url, use='curl', force_charset='utf-8'), process_review, dict(context, title=title, url=url, date=date, author=author_name, author_url=author_url))def process_review(data, context, session):    product = Product()    product.name = context['title']    product.category = 'BOEKEN'    product.ssid = context['url'].split('/')[-1]    product.url = data.xpath('//a[contains(., "Bestel dit boek")]/@href').string()    if product.url:        product.url = product.url.split('url=')[-1].replace('%2F', '/').replace('%3A', ':').split('&name=')[0]    else:        product.url = context['url']    ean = data.xpath('//p[contains(., "ISBN:")]//text()').string(multiple=True)    if ean:        ean = ean.split('ISBN: ')[-1].split()[0]        if ean:            product.properties.append(ProductProperty(type='id.ean', value=ean))    manufacturer = data.xpath('//p[contains(., "Uitgever:")]//text()').string(multiple=True)    if manufacturer:        manufacturer = manufacturer.split('Uitgever:')[-1].split('ISBN:')[0].split('Verschenen: ')[0]        if manufacturer:            product.manufacturer = manufacturer    content = data.xpath("//div[@class='rich-text-block w-richtext']").first()    if not content:        return    review = Review()    review.type = 'pro'    review.title = context['title']    review.url = context['url']    review.ssid = product.ssid    review.date = context['date']    review.authors.append(Person(name=context['author'], ssid=context['author'], profile_url=context['author_url']))    summary = content.xpath("p[1]/strong//text()").string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type='summary', value=summary))    excerpt = content.xpath('p[not(contains(., "Uitgever:"))][not(contains(., "Vertaling: "))][not(contains(., "ISBN:"))][not(.//a[contains(.,"www.")])]//text()').string(multiple=True)    if excerpt:        if summary:            excerpt = excerpt.replace(summary, "")        review.properties.append(ReviewProperty(type='excerpt', value=excerpt.strip()))    product.reviews.append(review)    session.emit(product)