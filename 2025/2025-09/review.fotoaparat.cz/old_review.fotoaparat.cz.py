from agent import *from models.products import *debug = Truedef process_revlist(data, context, session):    for rev in data.xpath("//div[@class='col-md-12']/a[@class='article-title']"):        url = rev.xpath("@href").string()        session.queue(Request(url), process_review, dict(url=url))    nexturl = data.xpath("//ul[@class='pagination']/li[@class='pagination-next']/a/@href").string()    if nexturl:        session.queue(Request(nexturl), process_revlist, dict())def process_review(data, context, session):    product = Product()    product.name = data.xpath("//div[@class='PageDescription']/h1//text()").string()    product.ssid = context['url'].split('/')[-2].replace('.html', '')    product.category = data.xpath("//div[@class='breadcrumbs']/ul/li[last()]/a//text()").string()    product.url = context['url']        review = Review()    review.title = data.xpath("//div[@class='PageDescription']/h1//text()").string()    review.date = data.xpath("//div[@class='PageDescription']/ul[@class='_metaInfo']/li[1]//text()").string(multiple=True)    review.ssid = product.ssid    review.type = 'pro'    review.url = context['url']        authors = data.xpath("//div[@class='PageDescription']/ul[@class='_metaInfo']/li[2]/a")    for author in authors:        author_name = author.xpath(".//text()").string()        author_url = author.xpath("@href").string()        review.authors.append(Person(name=author_name, profile_url=author_url, ssid=author_name))        summary = data.xpath("//div[@class='article-perex clearfix']/strong/p//text()").string(multiple=True)    if not summary:        summary = data.xpath("//div[@class='article-perex clearfix']/p/strong//text()").string(multiple=True)    if summary:        review.properties.append(ReviewProperty(type='summary', value=summary))    pages = data.xpath("//ul[@class='pagination pagination-detail']/li/a[not(contains(.,'Další strana'))]")    for page in pages:        page_url = page.xpath("@href").string()        page_title = page.xpath(".//text()").string()        review.properties.append(ReviewProperty(type='pages', value={'url': page_url, 'title': page_title}))    if pages:        last_url = pages.last().xpath("@href").string()        session.do(Request(last_url), process_conclusion, dict(context, review=review))            product.reviews.append(review)        session.emit(product)def process_conclusion(data, context, session):    review = context['review']        conclusion = data.xpath("//h2[contains(., 'Závěr')]/following-sibling::p//text()").string(multiple=True)    if conclusion:        review.properties.append(ReviewProperty(type='conclusion', value=conclusion))        pros = data.xpath("//div/p/strong[contains(.,'Plusy')]/../following-sibling::ul[1]//li//text()")    for pro in pros:        pro = pro.string().replace('+', '').strip()        review.add_property(type='pros', value=pro)        cons = data.xpath("//div/p/strong[contains(.,'Minusy')]/../following-sibling::ul[1]//li//text()")    for con in cons:        con = con.string().replace('- ', '').strip()        review.add_property(type='cons', value=con)        def run(context, session):    session.queue(Request('http://www.fotoaparat.cz/article/subcat/303/1'), process_revlist, {})