from agent import *from models.products import *import redef run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=3000)]    session.queue(Request("http://spielekritik.blogspot.com/", use="curl"), process_revlist, dict())def process_revlist(data, context, session):    revs = data.xpath("//h3[@class='post-title entry-title']/a")    for rev in revs:        name = rev.xpath("text()").string(multiple=True)        url = rev.xpath("@href").string(multiple=True)        date = rev.xpath("preceding::h2[@class='date-header'][1]/span/text()").string(multiple=True).split(',')[-1]        session.queue(Request(url, use="curl"), process_review, dict(name=name, url=url, date=date))    next_url = data.xpath("//span[@id='blog-pager-older-link']/a//@href").string()    if next_url:        session.queue(Request(next_url, use="curl"), process_revlist, dict())def process_review(data, context, session):    product = Product()    product.name = context['name'].split('.', 1)[-1].split("Rezension:")[-1].strip()    product.url = context['url']    product.ssid = context['url'].split('/')[-1]    product.category = 'Games'    review = Review()    review.type = 'pro'    review.title = context['name']    review.url = product.url    review.ssid = product.ssid    review.date = context['date']    author = data.xpath("//div[@class='post-body entry-content']/a").first()    if author:        name = author.xpath(".//text()").string()        name = re_search_once("(.+).", name)        if name:            url = author.xpath("@href").string()            review.authors.append(Person(name=name, ssid=name, profile_url=url))    excerpt = data.xpath("//div[@class='post-body entry-content']//text()").string(multiple=True)    if excerpt:        excerpt = re.split(r"Das \d+\. Montagsspielen", excerpt)[0].strip()        review.add_property(type='excerpt', value=excerpt)        product.reviews.append(review)        session.emit(product)