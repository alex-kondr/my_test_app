from agent import *from models.products import *debug = Trueimport redef getexcerpt(txtlist):   excerpt = ''   txtlist = [o.strip() for o in txtlist]   for line in txtlist:      excerpt += ' ' + line      if re_search_once("([!?.])$", line) and len(line) > 100:         break   excerpt = re.compile("\s+").sub(' ', excerpt)   return excerpt.strip()def process_frontpage(data, context, session):   for link in data.xpath("//h3[@class='post-title entry-title']//a"):      title = link.xpath("descendant::text()").string(multiple=True)      url = link.xpath("@href").string()      datetxt = link.xpath("following::div[@class='postmeta'][1]//text()").string(multiple=True)      date = re_search_once("(\d+/\d+/\d+)", datetxt)      author = link.xpath("following::div[@class='postmeta'][1]/descendant::span[@class='fn'][1]//text()").string(multiple=True)      name = re_search_once("^Review: (.*)$", title)      if not name:         name = re_search_once("^(.*) Review$", title)      if not name:         name = title      product = Product()      product.name = name      product.url = url      product.ssid = name      product.category = 'unknown'      review = Review()      review.type = 'pro'      review.title = title      review.url = url      review.ssid = title      review.date = date      product.reviews.append(review)      review.authors.append(Person(name=author, ssid=author))      txtlist = link.xpath("following::div[@class='post-body entry-content'][1]//text()[not(ancestor::script)]").strings()      if txtlist:         excerpt = getexcerpt(txtlist)         if excerpt:            review.add_property(type='excerpt', value=excerpt)      session.emit(product)   nexturl = data.xpath("//a[normalize-space(.) = 'Older Posts']/@href").string()   if nexturl:      session.queue(Request(nexturl), process_frontpage, dict())def run(context, session):   session.queue(Request('http://www.techolo.com/search/label/Review'), process_frontpage, {})