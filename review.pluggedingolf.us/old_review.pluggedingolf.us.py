# -*- coding: utf8 -*-from agent import *from models.products import *def process_first_page(data, context, session):    for link in data.xpath('//ul[@id="menu-main"]/li[a/text()="Reviews"]//ul/li/a'):        url=link.xpath('@href').string()        category=link.xpath('text()').string()        if url and category and 'course' not in url:            session.queue(Request(url),process_category,dict(category=category))def process_category(data, context, session):    for link in data.xpath('//h3//a'):        url=link.xpath('@href').string()        name=link.xpath('text()').string()        if url and name and 'course' not in url:            bad_list2 = [' Review']            for item in bad_list2:                if item in name:                    name = name.replace(item, '')            session.queue(Request(url),process_product,dict(context,url=url,name=name))    # Next page    next=data.xpath('//a[@class="next page-numbers"]//@href').string()    if next:        session.queue(Request(next), process_category, dict(context))def process_product(data, context, session):    product=Product()    product.name=context['name']    product.url=context['url']    product.ssid=product.name + product.url    product.category=context['category']    product.manufacturer=''    review=Review()    review.product=product.name    review.url=product.url    # Publish date    pub_date=data.xpath('//span[@class="datetime"]//time//@datetime').string()    if pub_date:        review.date=pub_date    else:        review.date='unknown'    # Author    author=data.xpath('//div[@class="ts-fab-header"]//h4//text()').string()    if author:        review.authors.append(Person(name=author, ssid=author))    else:        review.authors.append(Person(name='unknown', ssid='unknown'))    # Type    review.type='pro'    # Ssid    review.ssid=product.ssid    # Conclusion    conclusion = data.xpath('//div[contains(@class,"post-")]//h2[contains(text(),"Conclusion")]/following-sibling::p//text()').string(multiple=True)    if conclusion:        review.properties.append(ReviewProperty(type='conclusion', value=conclusion))    # Excerpt    excerpt=data.xpath('//div[contains(@class,"post-")]//p[not(@class)][not(@style)][not(span)][not(label)]//text()').string(multiple=True)    if excerpt:        if conclusion: excerpt = excerpt.split(conclusion)[0]        review.properties.append(ReviewProperty(type='excerpt',value=excerpt))        product.reviews.append(review)    if product.reviews:        session.emit(product)def run(context, session):    session.sessionbreakers=[SessionBreak(max_requests=10000)]    session.browser.agent = 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2383.0 Safari/537.36'    session.queue(Request('http://pluggedingolf.com/category/reviews/'), process_first_page, {})