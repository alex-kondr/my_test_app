from agent import *from models.products import *import operatorimport redebug = Truedef process_category(data, context, session):    for view in data.xpath("//h3[@class='m-product__main__title']//a"):         url = view.xpath("(.)/@href").string()          name = view.xpath("(.)//text()[string-length(normalize-space(.))>1]").join("")        if url:           session.queue(Request(url), process_product, {'url' : url, 'name' : name, 'ssid' : url})def process_product(data, context, session):       for list in data.xpath("//div[@class='o-average-rating__user-rating']"):        dat = list.xpath("div[@class='o-average-rating__user-rating__date']//text()[string-length(normalize-space(.))>1]").join("")        avt_n = list.xpath("div[@class='o-average-rating__user-rating__user']//text()[string-length(normalize-space(.))>1]").join("")        if dat:           product = Product()             product.name =context['name']            product.url = context['url']            product.ssid =context['url']            product.category = 'DJ'             review = Review()             review.product = product.name              review.url = product.url              review.ssid = product.ssid            review.type = "pro"            review.date = dat           if avt_n :              review.authors.append(Person(name = avt_n, profile_url = review.url, ssid = review.ssid))              for listimg in data.xpath("//div[@id='prod_slider']//ul/li"):               src = listimg.xpath("@data-thumb").string()               if src:                  product.properties.append(ProductProperty(type="image" , value = {'src': src}))           excerpt = data.xpath("//p[@class='a-lead']//text()[string-length(normalize-space(.))>1]").join("")           if excerpt:                review.properties.append(ReviewProperty(type="excerpt", value = excerpt))           j = 0           for ratingList in list.xpath("div[@class='a-stars']//img[contains(@src, 'rating-star--full.svg')]"):               vals = ratingList.xpath("@src").join("")               if vals:                  j = j + 1           if j>0:              review.grades.append(Grade(name= avt_n, value = j, worst = 0,  best = 5))            i = 0           for rating in data.xpath("//div[@class='a-rating']//div[@class='a-stars']//img[contains(@src, 'rating-star--full.svg')]"):               val = rating.xpath("@src").join("")               if val:                  i = i + 1           if i>0:              review.grades.append(Grade(type = 'overall', value = i, worst = 0,  best = 5))            product.reviews.append(review)              session.emit(product)def run(context, session):        session.queue(Request('https://www.emusic.se/topplista/dj/'), process_category, {})    session.queue(Request('https://www.emusic.se/mitt-emusic/senast-visade-produkter/'), process_category, {})