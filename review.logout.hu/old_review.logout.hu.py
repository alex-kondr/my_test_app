from agent import *from models.products import *def process_revlist(data, context, session):    for rev in data.xpath("//ul[@class='flc']//li[contains(@class, 'content flc')]"):        url = rev.xpath("div/div/h1/a/@href").string()        title = rev.xpath("div/div/h1/a/text()").string()        summary = rev.xpath("div/div/p[1]/text()").string(multiple=True)        if url and title:            session.queue(Request(url), process_review, dict(context, url=url, title=title, summary=summary))    nexturl = data.xpath("//a[@rel='next'][1]/@href").string()    if nexturl:        session.queue(Request(nexturl), process_revlist, dict(context))def process_review(data, context, session):    product = Product()    product.name = context['title']    product.url = context['url']    product.ssid = context['url'].split('/')[-2]    product.category = data.xpath("//div[@class='path patht']/a[last()]/text()").string()    review = Review()    review.type = 'pro'    review.title = context['title']    review.url = context['url']    review.ssid = product.ssid    review.date = data.xpath("//time//following-sibling::text()").string().split(' ')[0]    author_url = data.xpath("//a[@itemprop='author']//@href").string()    author_name = data.xpath("//span[@itemprop='name']//text()").string(multiple=True)    if author_url and author_name:        review.authors.append(Person(name=author_name, ssid=author_name, profile_url=author_url))    summary = context['summary']    excerpt = data.xpath("//p[contains(@class,'mgt')]//text()").string(multiple=True)    if summary:         review.properties.append(ReviewProperty(type='summary', value=summary))    conclusion = data.xpath("//*[contains(.,'Konklúzió')]/following::p[ancestor::div/@class='defcnt cntatc']//text()").string(multiple=True)    if conclusion:        review.properties.append(ReviewProperty(type='conclusion', value=conclusion))    if excerpt:        if conclusion:            excerpt = excerpt.replace(conclusion, "")        review.properties.append(ReviewProperty(type='excerpt', value=excerpt))        product.reviews.append(review)        session.emit(product)def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=8000)]    session.queue(Request('https://logout.hu/cikkek/index.html'), process_revlist, {})