from agent import *from models.products import *def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=10000)]    session.queue(Request('http://www.photographyreview.com/'), process_frontpage, {})def process_frontpage(data, context, session):    cats = data.xpath('//ul[@id="menu-menu_header"]//li[contains(., "USER REVIEWS")]//li/a')    for cat in cats:        name = cat.xpath("text()").string()        url = cat.xpath('@href').string()        session.queue(Request(url), process_prodlist, dict(context, cat=name))def process_prodlist(data, context, session):    prods = data.xpath("//table[@id='desktoptable']/tbody//li/a")    for prod in prods:        url = prod.xpath("@href").string()        title = prod.xpath(".//text()").string()        session.queue(Request(url), process_product, dict(context, url=url, title=title))    nexturl = data.xpath("//div[@class='product-list-nav clearfix']//a[@id='featured-nav'][last()]/@href").string()    if nexturl:        session.queue(Request(nexturl), process_prodlist, dict(context))def process_product(data, context, session):    product = Product()    product.ssid = context['url'].split('/')[-1].replace('.html', '')    product.url = context['url']    product.name = context['title']    product.category = context['cat']    revs = data.xpath('//table[@class="user-review-desktop"]')    for rev in revs:        review = Review()        review.type = 'user'        review.url = context['url']        author = rev.xpath('tr/td[@class="review-td-left header_sub_menu_sample"]/div[3]//text()').string()        review.authors.append(Person(name=author, ssid=author))        date = rev.xpath('tr/td[@class="review-td-left header_sub_menu_sample"]/div[1]//text()').string(multiple=True)        if date:            review.date = date.strip('[').strip(']')        review.ssid = product.ssid + '-' + review.date + '-' + author        grades = rev.xpath('.//div[@class="user-review-rating header_sub_menu_sample"]/table/tr')        for grade in grades:            value = grade.xpath('.//td[@class="rate"]/text()').string()            name = grade.xpath('.//td[@class="rate"]/preceding-sibling::node()/text()').string(multiple=True)            if name:                if name == 'overall':                    review.grades.append(Grade(type=name, value=int(value), best=5))                else:                    review.grades.append(Grade(name=name, value=int(value), best=5))        excerpt = rev.xpath('.//div[@class="user-review-header-content"]//text()').string(multiple=True)        if not excerpt:            excerpt = rev.xpath('.//div[@class="user-review-header" and position() > 4]//text()').string(multiple=True)        if excerpt:            review.properties.append(ReviewProperty(type='excerpt', value=excerpt))            product.reviews.append(review)    if product.reviews:        session.emit(product)