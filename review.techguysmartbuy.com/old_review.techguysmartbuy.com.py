from agent import *from models.products import *import simplejsondef run(context, session):    session.queue(Request("https://techguysmartbuy.com/category/review", use='curl'), process_prodlist, dict())def process_prodlist(data, context, session):    prods = data.xpath("//article[@id]/following-sibling::a[1]")    for prod in prods:        name = prod.xpath("@title").string()        url = prod.xpath("@href").string()        session.queue(Request(url, use='curl', max_age=0), process_product, dict(context, name=name, url=url))    nexturl = data.xpath("//link[@rel='next']//@href").string()    if nexturl:        session.queue(Request(nexturl, use='curl', max_age=0), process_prodlist, dict(context))def process_product(data, context, session):    product = Product()    product.name = context['name'].split(" Review")[0].split(" review")[0].split(': ')[0]    product.ssid = context['url'].split('/')[-1].split(".html")[0]    product.url = context['url']    product.category = data.xpath("//div[@class='single-metainfo']/a[@rel='category tag'][1]//text()").string() or 'Tech'    review = Review()    review.title = context['name']    review.date = data.xpath("//meta[@property='article:published_time']//@content").string().split("T")[0]    review.ssid = product.ssid    review.type = 'pro'    review.url = context['url']    json = data.xpath("//script[@type='application/ld+json']//text()").string()    resp = simplejson.loads(json)    author_name = str(resp['@graph'][3]['name'])    author_url = str(resp['@graph'][3]['@id'])    if author_name:        if author_url:            review.authors.append(Person(name=author_name, profile_url=author_url, ssid=author_name))        else:            review.authors.append(Person(name=author_name, ssid=author_name))    excerpt = data.xpath("//div[@class='elementor-row']//p[not(span/a)]//text()").string(multiple=True)    if not excerpt:        excerpt = data.xpath('//div[@class="elementor-widget-container"]//p[not(em/strong)]//text()').string(multiple=True)    if not excerpt:        excerpt = data.xpath("//div[@class='entry-content']//text()").string(multiple=True)    if not excerpt:        excerpt = data.xpath("//div[@class='textwidget']//text()").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type='excerpt', value=excerpt.split("Tags: ")[0].split("Comments")[0].strip()))        product.reviews.append(review)        session.emit(product)