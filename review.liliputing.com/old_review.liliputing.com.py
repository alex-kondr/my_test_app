from agent import *from models.products import *def process_revlist(data, context, session):    for rev in data.xpath("//div[@class='entry-container']"):        context['product_url'] = rev.xpath(".//h2[@class='entry-title']/a/@href").string()        context['product_name'] = rev.xpath(".//h2[@class='entry-title']/a/text()").string()        context['date'] = rev.xpath(".//time[@class='entry-date published']/@datetime").string().split('T')[0]        context['username'] = rev.xpath(".//span[@class='author vcard']/a[@class='url fn n']//text()").string()        session.queue(Request(context['product_url'], use='curl'), process_product, context)    next = data.xpath("//div[@class='nav-links']/a[@class='next page-numbers']/@href").string()    if next:        session.queue(Request(next, use='curl'), process_revlist, context)def process_product(data, context, session):    product = Product()    product.name = context['product_name'].replace("(mini-review)", "").split(" mini review")[0].split(" review")[0].split(" preview")[0].split(" Review")[0].split(" Preview")[0]    product.ssid = context['product_name']    product.url = context['product_url']    product.category = data.xpath('//span[@class="tags-links"]/a/text()').string()    for imageline in data.xpath("//div[@class='entry-content']//img[contains(@src,'/wp-content/uploads/')]"):        url_image = imageline.xpath("@src").string()        if url_image:            product.properties.append(ProductProperty(type='image', value={'src': url_image, 'type': 'product'}))    review = Review()    review.type = 'pro'    review.url = product.url    review.title = context['product_name']    review.date = context['date']    review.ssid = product.ssid    authorurl = data.xpath("//span[@class='entry-author']/a[@class='entry-author-link']//@href").string()    review.authors = Person(name=context['username'], ssid=context['username'], profile_url=authorurl)    conclusion = data.xpath("//h3[text()='Verdict']/following-sibling::p//text()").string(multiple=True)    if conclusion:        excerpt = data.xpath("//h3[text()='Verdict']/preceding-sibling::p//text()").string(multiple=True)        review.properties.append(ReviewProperty(type='conclusion', value=conclusion))    else:        excerpt = data.xpath("//div[@class='entry-content']/p//text()").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type='excerpt', value=excerpt))    if excerpt or conclusion:        product.reviews.append(review)        session.emit(product)def run(context, session):    session.queue(Request('https://liliputing.com/category/reviews', use='curl'), process_revlist, {})