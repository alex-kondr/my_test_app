import stringfrom agent import *from models.products import *import redebug = Truedef process_frontpage(data, context, session):    for p in data.xpath("//h1[regexp:test(., 'Reviews')]/following-sibling::h3/a"):        context['name'] = p.xpath("text()[string-length(normalize-space(.))>0]").string()        context['url'] = p.xpath("@href").string()        if context['name'] and context['url']:            session.queue(Request(context['url']), process_product, context)def process_product(data, context, session):    product = Product()    review = Review()    product.name = re_search_once('^(.+).\(', context['name'])    product.url = context['url']    platform = re_search_once('\((.+)\)', context['name'])    if platform:        product.category = Category(name = "Spiele|" + platform)        product.properties.append(ProductProperty(name = 'Platforma', value = platform))    else:        product.category = Category(name = "Spiele")    product.ssid = re_search_once('reviews\/(.+)\.', product.url)    review.ssid = product.ssid    review.url = product.url    review.type = 'pro'    has_img = False    for img in data.xpath("//center/table//font/img"):        image_src = img.xpath("@src").string()        image_alt = img.xpath("@alt").string()        if image_src:            if not image_alt:                image_alt = product.name            product.properties.append(ProductProperty(type=ProductPropertyType(name="image"), value = { 'src': image_src, 'alt': image_alt, 'type': 'screenshot'}))            has_img = True    if not has_img:        for img in data.xpath("//p/img"):            image_src = img.xpath("@src").string()            image_alt = img.xpath("@alt").string()            if image_src:                if not image_alt:                    image_alt = product.name                product.properties.append(ProductProperty(type=ProductPropertyType(name="image"), value = { 'src': image_src, 'alt': image_alt, 'type': 'screenshot'}))                has_img = True    excerpt = data.xpath("//center/table//font[text()[string-length(normalize-space(.))>100]][1]//text()[string-length(normalize-space(.))>100]").string()    if not excerpt:        excerpt = data.xpath("//p/text()[string-length(normalize-space(.))>100][1]").string()    if not excerpt:        excerpt = data.xpath("//div[@id='container']/h3/text()[string-length(normalize-space(.))>100][1]").string()    if excerpt:        review.properties.append(ReviewProperty(type=ReviewPropertyType(name='excerpt'), value=excerpt))    product.reviews.append(review)    session.emit(product)def run(context, session):     session.queue(Request('http://www.gamefront.de/reviews/revs.html'), process_frontpage, {})