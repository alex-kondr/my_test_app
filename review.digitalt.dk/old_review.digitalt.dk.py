from agent import *from models.products import *CATS = ['Medieafspiller', 'Lyd og andet tilbehør', 'Smart Home']def run(context, session):    session.queue(Request("http://digitalt.tv/kategori/anmeldelser/", use="curl"), process_revlist, dict())def process_revlist(data, context, session):    revs = data.xpath("//ul[@class='posts-items']/li//h2[@class='post-title']/a")    for rev in revs:        title = rev.xpath(".//text()").string(multiple=True)        url = rev.xpath("@href").string()        if "Test: " in title or title.split()[-1] == 'Test' or ' Test - ' in title:            session.queue(Request(url, use="curl"), process_review, dict(context, url=url, title=title))    next_url = data.xpath("//link[@rel='next']/@href").string()    if next_url:        session.queue(Request(next_url, use="curl"), process_revlist, dict(context))def process_review(data, context, session):    product = Product()    name = context['title']    product.name = name.split("Test: ")[-1].split(' Test -')[0].split(' Anmeldelse')[0].split(' anmeldelse')[0].split(' - ')[0]    product.url = context['url']    product.ssid = context['url'].split("/")[-2]    cat = data.xpath('//a[contains(@class, "post-cat")]/text()').string()    if cat and cat in CATS:        product.category = cat    else:        product.category = 'Tests'    review = Review()    review.type = 'pro'    review.title = context['title']    review.url = product.url    review.ssid = product.ssid    date = data.xpath('//meta[@property="article:published_time"]/@content').string()    if date:        review.date = date.split('T')[0]    author = data.xpath('//span[@class="meta-author"]/a').first()    if author:        author_name = author.xpath("text()").string()        if author_name:            author_name = author_name.split(' - ')[-1].strip()        author_url = author.xpath("@href").string()        if author_url:            review.authors.append(Person(name=author_name, ssid=author_name, profile_url=author_url))        else:            review.authors.append(Person(name=author_name, ssid=author_name))    pros = data.xpath('//div[@class="rwp-pros"]')    if not pros:        pros = data.xpath('//div[contains(@class, "thumbup")]//li')    for pro in pros:        pro = pro.xpath('.//text()').string()        if pro:            pro = pro.replace('+', '')            review.add_property(type='pros', value=pro)    cons = data.xpath('//div[@class="rwp-cons"]')    if not cons:        cons = data.xpath('//div[contains(@class, "thumbdown ")]//li')    for con in cons:        con = con.xpath('.//text()').string()        if con:            con = con.replace('-', '')            review.add_property(type='cons', value=con)    grade_overall = data.xpath('//span[contains(@class, "score-value")]//text()').string(multiple=True)    if grade_overall:        value = float(grade_overall.split("/")[0])        best = float(grade_overall.split('/')[-1])        review.grades.append(Grade(type='overall', value=value, best=best))    grades = data.xpath('//div[@class="rwp-criterion-text"]')    for grade in grades:        grade_name = grade.xpath('.//span[contains(@class, "label")]//text()').string()        grade_value = grade.xpath('.//span[contains(@class, "score")]//text()').string()        if grade_name and grade_value:            review.grades.append(Grade(name=grade_name, value=float(grade_value), best=100.0))    summary = data.xpath("//h2[@class='entry-sub-title']/text()").string()    if not summary:        summary = data.xpath('//div[@class="responsive-tabs"]//p[1]//text()').string(multiple=True)    if not summary:        summary = data.xpath('//meta[@property="og:description"]/@content').string()    if summary:        review.add_property(type='summary', value=summary)    conclusion = data.xpath('''//*[regexp:test(local-name(), '^h\d+')][contains(., 'Konklusion')]/following-sibling::p[not(.//img)][not(contains(., "DIGITALT.TV takker"))]//text()''').string(multiple=True)    if conclusion:        review.add_property(type='conclusion', value=conclusion)    excerpt = data.xpath('//div[contains(@class, "entry-content")]//p[not(.//img)][not(contains(., "DIGITALT.TV takker"))][not(ancestor::div[@class="rwp-prosandcons"])][not(contains(., "Læs mere om"))]//text()').string(multiple=True)    if not excerpt:        excerpt = data.xpath("//head[meta[@itemprop='description']]/following-sibling::body[1]//p//text()").string(multiple=True)    if excerpt:        if summary:            excerpt = excerpt.replace(summary, '').strip()        if conclusion:            excerpt = excerpt.replace(conclusion, '').strip()        if excerpt:            excerpt = excerpt.split("C More særtilbud")[0].strip()            review.add_property(type='excerpt', value=excerpt)            product.reviews.append(review)            session.emit(product)