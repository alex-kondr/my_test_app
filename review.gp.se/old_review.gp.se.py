#!/usr/bin/python# -*- coding: utf-8 -*-from agent import *from models.products import *debug = Truedef run(context, session):    session.queue(Request('http://www.gp.se/n%C3%B6je/film', use="curl"), process_category, dict(category='Film'))    session.queue(Request('http://www.gp.se/om/Film', use="curl"), process_category, dict(category='Film'))    session.queue(Request('http://www.gp.se/om/Filmrecension', use="curl"), process_category, dict(category='Film'))    session.queue(Request('http://www.gp.se/n%C3%B6je/spel', use="curl"), process_category, dict(category='Spel'))    session.queue(Request('http://www.gp.se/om/Spel', use="curl"), process_category, dict(category='Spel'))    session.queue(Request('http://www.gp.se/om/Spelrecension', use="curl"), process_category, dict(category='Spel'))def process_category(data, context, session):    for link in data.xpath('//article[contains(@class, "c-teaser c-teaser--left")]'):        url=link.xpath('following::a[@class="c-teaser__link"][1]//@href').string()        name=link.xpath('following::div[@class="c-teaser__content"][1]//node()[regexp:test(name(),"h\d")]//text()').string()        if url and name:            session.queue(Request(url, use="curl"),process_product,dict(context,url=url,name=name))def process_product(data, context, session):    product=Product()    # Name    name = data.xpath('//div[@class="article__review__description"]/p/strong[1]//text()').string()    if name and 'spel' in context['url']:        product.name = name    else:        product.name = context['name']    product.url=context['url']    product.ssid=product.name + product.url    product.category=context['category']    product.manufacturer=''    review=Review()    review.product=product.name    review.url=product.url    review.type='pro'    review.ssid=product.ssid    # Publish date    pub_date=data.xpath('//meta[@property="article:published"]//@content').string()    if pub_date:        if 'T' in pub_date: pub_date=pub_date.split('T')[0]        review.date=pub_date    else:        review.date='unknown'    # Author    author=data.xpath('//meta[@property="article:author"]//@content').string(multiple=True)    if author:        review.authors.append(Person(name=author, ssid=author))    else:        review.authors.append(Person(name='unknown', ssid='unknown'))    # Grades    overall=data.xpath('//meta[@itemprop="ratingValue"]//@content').string()    if overall:        if '-' in overall: overall = overall.replace('-','')        review.grades.append(Grade(name='Overall Rating', type='overall', value=overall, best=5))    # Excerpt    excerpt=data.xpath('//div[contains(@class,"article__body")]//p//text()').string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type='excerpt',value=excerpt))    if overall and excerpt:        product.reviews.append(review)    if product.reviews:        session.emit(product)