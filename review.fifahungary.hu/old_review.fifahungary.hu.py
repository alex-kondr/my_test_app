from agent import *from models.products import *debug = Truelabels = [u'Grafika', u'Játékmenet', u'Tartalom', u'Zene', u'Szavatosság']def process_revlist(data, context, session):    for rev in data.xpath("//table[@class='dotted']/tbody/tr/td[1]//a[regexp:test(@href,'fifahungary')]"):        url = rev.xpath("@href").string()        name = rev.xpath("descendant::text()").string(multiple=True)        if url and name:            session.queue(Request(url), process_review, dict(url=url, name=name))    nexturl = data.xpath("//div[@class='lapozo']//b[regexp:test(normalize-space(.), '^\d+$')]/following-sibling::a[1]/@href").string()    if nexturl:        session.queue(Request(nexturl), process_frontpage, dict())def process_review(data, context, session):    product = Product()    product.name = context['name']    product.url = context['url']    product.ssid = product.name    content = data.xpath("//div[@id='content-bel-left']").first()    if content:        product.category = "Games|" + content.xpath("descendant::strong[regexp:test(text(),'Tesztplatform')]/following-sibling::text()").string()        product.manufacturer = content.xpath("following-sibling::div//p[@class='adatlap-cim' and regexp:test(normalize-space(.), '^fejlesztő:$')]/following::text()[normalize-space(self::text())][1]").string()        release_date = content.xpath("following-sibling::div//p[@class='adatlap-cim' and regexp:test(normalize-space(.), '^megjelenés:$')]/following::text()[normalize-space(self::text())][1]").string()        if release_date:            product.add_property(type='release_date', value=release_date)        review = Review()        review.type = 'pro'        review.title = context['name']        review.url = context['url']        review.ssid = review.title        product.reviews.append(review)        author = content.xpath("descendant::a[regexp:test(@href, 'szemelylap.php')][1]").first()        if author:            name = author.xpath("descendant::text()").string(multiple=True)            url = author.xpath("@href").string()            if url and name:                fixurl = data.resolve_url(re_search_once('(szemelylap.php[^\%]*)\%', url))                review.authors.append(Person(name=name, ssid=name, profile_url=fixurl))        summary = content.xpath("div[@class='bevezeto']//text()").string(multiple=True)        if summary:            review.add_property(type='summary', value=summary)                excerpt = content.xpath("div[@id='teszt']//text()").string(multiple=True)        conclusion = content.xpath("//div[@id='teszt']//*[contains(., 'ÖSSZEGZÉS') or contains(., 'Végeredmény') or contains(., 'ÉRZÉS') or contains(., 'Összkép')]/text()").string(multiple=True)        if conclusion and excerpt:            review.add_property(type='conclusion', value=excerpt.split(conclusion)[-1])            excerpt = excerpt.split(conclusion)[0]                if excerpt:            review.add_property(type='excerpt', value=excerpt)        rates = [o.xpath("descendant::text()").string(multiple=True) for o in content.xpath("following-sibling::div//table[@class='ertekeles']/tr/td[1]")]        if len(rates) == len(labels):            for name, rate in zip(labels, rates):                if name and rate and float(rate):                    review.grades.append(Grade(name=name, value=float(rate), best=100.0))        for pro in content.xpath("following-sibling::div//div[@class='ert-pro']//td/text()"):            line = pro.string()            if line:                fixedline = re_search_once("^\+ (.*)$", line)                if fixedline:                    review.add_property(type='pros', value=fixedline)        for con in content.xpath(" following-sibling::div//div[@class='ert-kontra']//td/text()"):            line = con.string()            if line:                fixedline = re_search_once("^- (.*)$", line)                if fixedline:                    review.add_property(type='cons', value=fixedline)    if product.reviews:        session.emit(product)    def run(context, session):    session.queue(Request('http://fifahungary.co.hu/leiras_tesztarc.php'), process_revlist, {})