from agent import *from models.products import *def run(context, session):    session.sessionbreakers = [SessionBreak(max_requests=5000)]    session.queue(Request('https://icrontic.com/'), process_revlist, dict())def process_revlist(data, context, session):    revs = data.xpath('//ul[@class="DataList Discussions"]//li')    for rev in revs:        ssid = rev.xpath("@id").string().split('_')[-1]        title = rev.xpath('div/div[@role="heading"]/a/text()').string()        url = rev.xpath('div/div[@role="heading"]/a/@href').string()        session.queue(Request(url), process_review, dict(context, title=title, ssid=ssid, url=url))    nexturl = data.xpath("//div[@id='PagerBefore']/a[@class='Next']/@href").string()    if nexturl:        session.queue(Request(nexturl), process_revlist, dict(context))def process_review(data, context, session):    product = Product()    product.name = context['title']    product.ssid = context['ssid']    product.url = context['url']    categs = data.xpath("//span[contains(@class,'CrumbLabel Category')]/a/span//text()")    product.category = '|'.join([elem.string() for elem in categs])    review = Review()    review.title = context['title']    review.ssid = product.ssid    review.type = 'user'    review.url = context['url']    date = data.xpath("//div[@class='Meta DiscussionMeta']/span[@class='MItem DateCreated']/a[@class='Permalink']/time/@title").string()    if date:        review.date = ' '.join(date.split(' ')[:-1])    authors = data.xpath("//div[@class='Item-Header DiscussionHeader']/div[@class='AuthorWrap']/span[@class='Author']/a[@class='Username']")    for author in authors:        author_name = author.xpath(".//text()").string()        author_url = author.xpath("@href").string()        review.authors.append(Person(name=author_name, profile_url=author_url, ssid=author_name))    excerpt = data.xpath("//div[@class='Discussion']/div[@class='Item-BodyWrap']/div[@class='Item-Body']/div[@class='Message userContent']//text()").string(multiple=True)    if excerpt:        review.properties.append(ReviewProperty(type='excerpt', value=excerpt))        product.reviews.append(review)            if product.reviews:        session.emit(product)